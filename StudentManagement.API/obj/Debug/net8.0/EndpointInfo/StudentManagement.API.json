{
  "openapi": "3.0.1",
  "info": {
    "title": "School API V1",
    "version": "v1"
  },
  "paths": {
    "/api/Auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Authenticates a user and returns a JWT token.",
        "requestBody": {
          "description": "The login details including username and password.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Course/assign": {
      "post": {
        "tags": [
          "Course"
        ],
        "summary": "Assigns a list of courses to a student.",
        "requestBody": {
          "description": "The assignment details, including the student ID and list of course IDs.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignCourseDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignCourseDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignCourseDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Student/add": {
      "post": {
        "tags": [
          "Student"
        ],
        "summary": "Adds a new student to the system.",
        "requestBody": {
          "description": "The student object to add.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddStudentDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AddStudentDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AddStudentDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Student/list": {
      "get": {
        "tags": [
          "Student"
        ],
        "summary": "Retrieves a list of all students, including their enrolled courses.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddStudentDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AssignCourseDto": {
        "type": "object",
        "properties": {
          "studentId": {
            "type": "integer",
            "format": "int32"
          },
          "courseIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LoginDto": {
        "required": [
          "password",
          "username"
        ],
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme.Example: \"Authorization: Bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}